buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
		maven {
			url 'http://maven.novaapi.net/'
		}
	}
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "jacoco"

configurations.all {
	resolutionStrategy.cacheChangingModulesFor 5, 'minutes'
}

compileJava {
	sourceCompatibility = 1.8
}

repositories {
	mavenLocal()
	mavenCentral()
	maven {
		url 'http://maven.novaapi.net/'
	}
}

dependencies {
	compile 'com.google.guava:guava:18.0'
	compile 'org.msgpack:msgpack-core:0.7.0-p4'
	compile 'com.typesafe:config:1.2.1'
	compile 'se.jbee:silk-di:0.6'
	compile 'org.slf4j:slf4j-api:1.7.10'
	compile group: "nova.core", name: "NovaCore", version: novaVersion, changing: true

	testCompile group: "nova.core", name: "NovaCore", version: novaVersion, classifier: "wrappertests", changing: true
	testCompile "junit:junit:4.12"
	testCompile 'org.assertj:assertj-core:3.0.0'
	testCompile "org.mockito:mockito-core:1.+"
	testRuntime 'org.slf4j:slf4j-simple:1.7.10'
}

artifacts {
	archives jar
}

javadoc {
	include 'com/calclavia/**'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	from 'build/docs/javadoc'
	classifier 'javadoc'
}

jacocoTestReport {
	reports {
		xml.enabled = true // coveralls plugin depends on xml format report
		html.enabled = true
	}
}

test {
	forkEvery = 1
	maxParallelForks = 4

	testLogging {
		exceptionFormat = 'full'
	}

	testLogging.showStandardStreams = true

	beforeTest {descriptor ->
		def classPadded = String.format("%-50s", descriptor.className)
		logger.lifecycle("Running test ${classPadded} ${descriptor.name}()")
	}
}